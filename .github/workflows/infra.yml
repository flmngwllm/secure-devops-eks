name: Terraform Infrastructure 
on:
  push:
    branches:
      - main
    paths:
      - 'terraform/**'
  pull_request:
      branches:
      - main
      paths:
      - 'terraform/**'
  workflow_dispatch:

env: 
  TF_WORKING_DIR: ./terraform
  PUBLIC_ACCESS_CIDRS: '["0.0.0.0/0"]'
  ACTIONS_ROLE_ARN: ${{ secrets.ACTIONS_ROLE_ARN }}
  SSH_KEY_NAME: ${{ secrets.SSH_KEY_NAME }}

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TF_WORKING_DIR }}
    steps:  
      - name: Checkout source code
        uses: actions/checkout@v4
      
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3
      
      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ACTIONS_ROLE_ARN }}
          aws-region: us-east-1
      
      - name: Terraform Init
        run: terraform init -upgrade

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: |
          terraform plan -no-color -out=tfplan -input=false \
            -var="public_access_cidrs=${PUBLIC_ACCESS_CIDRS}" \
            -var="github_actions_role_arn=${ACTIONS_ROLE_ARN}" \
            -var="enable_k8s_resources=false" \
            -var="ssh_key_name=${SSH_KEY_NAME}" || exit 1
      
      - name: Terraform Apply (Phase 1 - Infra Only)
        if: github.event_name != 'pull_request'
        run: |
          terraform apply -auto-approve -input=false \
            -var="public_access_cidrs=${PUBLIC_ACCESS_CIDRS}" \
            -var="github_actions_role_arn=${ACTIONS_ROLE_ARN}" \
            -var="enable_k8s_resources=false" \
            -var="ssh_key_name=${SSH_KEY_NAME}" || exit 1

      - name: Wait for EKS Cluster readiness
        if: github.event_name != 'pull_request'
        run: |
          echo "Waiting for EKS cluster to be active..."
          aws eks wait cluster-active --name secure_cluster --region us-east-1
          echo "Waiting for node group to be ready..."
          aws eks wait nodegroup-active --cluster-name secure_cluster --nodegroup-name secure_devops_node_group --region us-east-1

      - name: Import aws-auth ConfigMap (only if exists)
        if: github.event_name != 'pull_request'
        run: |
            if kubectl get configmap aws-auth -n kube-system; then
            terraform import -input=false kubernetes_config_map.aws_auth kube-system/aws-auth || true
            else
            echo "aws-auth does not exist yet"
            fi

      - name: Terraform Apply (Phase 2 - Kubernetes Resources)
        if: github.event_name != 'pull_request'
        run: |
          terraform apply -auto-approve -input=false \
            -var="public_access_cidrs=${PUBLIC_ACCESS_CIDRS}" \
            -var="github_actions_role_arn=${ACTIONS_ROLE_ARN}" \
            -var="enable_k8s_resources=true" \
            -var="ssh_key_name=${SSH_KEY_NAME}" || exit 1

      - name: Github SHA
        if: github.event_name != 'pull_request'
        run: echo "${GITHUB_SHA}" > commit_sha.txt

      - name: Upload commit SHA as artifact
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: commit-sha
          path: terraform/commit_sha.txt



    