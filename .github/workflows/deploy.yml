name: Deploy App with Helm + EKS
on:
  workflow_run:
    workflows: ["Terraform Infrastructure"]
    types:
      - completed
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy-app:
    needs: terraform
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::831274730062:role/github-actions-role
          role-session-name: GitHubActions
          aws-region: us-east-1

      - name: tfsec action
        uses: aquasecurity/tfsec-action@v1.0.3
        continue-on-error: true
       
      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      
      - name: Build Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: secure-app
          ECR_IMAGE_TAG: ${{ github.sha }}-${{ github.run_number }}
        run: |
          echo "Building Docker image"
          docker build -t "$ECR_REGISTRY/$ECR_REPOSITORY:$ECR_IMAGE_TAG" ./testapp
          docker push "$ECR_REGISTRY/$ECR_REPOSITORY:$ECR_IMAGE_TAG"
          echo "Docker image: $ECR_IMAGE_TAG pushed to ECR"
          echo "$ECR_REGISTRY/$ECR_REPOSITORY:$ECR_IMAGE_TAG"

      - name: Scan Docker image
        uses: aquasecurity/trivy-action@master
        with:
            image-ref: ${{ steps.login-ecr.outputs.registry }}/secure-app:${{ github.sha }}-${{ github.run_number }}
      
      - name: Update kubeconfig
        run: |
          aws eks --region us-east-1 update-kubeconfig --name secure_cluster
      - name: Debug EKS Access Entry
        run: |
          echo "Checking if GitHub Actions access entry exists..."
          aws eks describe-access-entry \
            --cluster-name secure_cluster \
            --principal-arn arn:aws:iam::831274730062:role/github-actions-role \
            --region us-east-1 || echo "Access entry not found or not ready."
            
    
      - name: Who am I?
        run: |
          kubectl config view --minify -o jsonpath='{.users[0].user.exec.args}'
          aws sts get-caller-identity 

      - name: Install helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      
      - name: Add Helm repository
        run: |
          helm repo add eks https://aws.github.io/eks-charts
          helm repo update

      - name: Deploy ALB Controller
        run: |
          helm upgrade --install aws-load-balancer-controller eks/aws-load-balancer-controller \
            -n kube-system \
            --create-namespace \
            --set clusterName=secure_cluster \
            --set region=us-east-1 \
            --set vpcID=${{ needs.terraform.outputs.vpc_id }} \
            --set serviceAccount.create=false \
            --set serviceAccount.name=aws-alb-controller \
            --set image.tag="v2.7.1"
          
      - name: Verify access to EKS
        run: |
          echo "Checking cluster node access..."
          kubectl get nodes
      
      - name: Deploy to EKS 
        run: | 
          echo "Deploying via Helm"
          helm upgrade --install secure-app ./testapp/testapp-helm-chart \
            --namespace default \
            --create-namespace \
            --set image.respository=831274730062.dkr.ecr.us-east-1.amazonaws.com/secure-app \
            --set image.tag=${{ github.sha }}-${{ github.run_number }}

      - name: Verify deployment
        run: |
          echo "Verifying deployment"
          kubectl get pods --namespace default
          kubectl get svc   
          kubectl get deployments
          kubectl get nodes
        
      - name: Running kube-bench
        run: |
            echo "Running kube-bench"
            curl -LJO https://github.com/aquasecurity/kube-bench/releases/download/v0.6.18/kube-bench_0.6.18_linux_amd64.tar.gz
            tar -xvf kube-bench_0.6.18_linux_amd64.tar.gz
            chmod +x kube-bench
            ./kube-bench --version
            ./kube-bench --benchmark eks 
         
      

      